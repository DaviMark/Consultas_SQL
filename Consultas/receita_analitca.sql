-- Consulta com mais de 200GB
WITH UNION_1 AS
(
SELECT 
    FD_AWKEY      AS _BIC_CA_AWKEY2,
    FD_COMPCODE   AS COMP_CODE, 
    FD_CHRTACCTS  AS CHRT_ACCTS, 
    FD_FISCVARNT  AS FISCVARNT, 
    FD_FISCPER    AS FISCPER, 
    FD_ACDOCNO    AS AC_DOC_NO, 
    FD_ITEMNUM    AS ITEM_NUM, 
    FD_GLACCOUNT  AS GL_ACCOUNT
FROM `project.dataset.table.OFIN08`
-- WHERE FD_PSTNGDATE >= '2025-01-01'
WHERE DATE_TRUNC(FD_PSTNGDATE, MONTH) BETWEEN DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH)
                           AND LAST_DAY(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))

)
, UOLB_UOLC_NPD_SEM_MATERIAL AS (
SELECT
  COMP_CODE,
  CHRT_ACCTS,
  FISCVARNT,
  FISCPER,
  AC_DOC_NO,
  -- CREATEDON,
  -- DOC_DATE,
  PSTNG_DATE,  
  -- CLEAR_DATE,
  -- ACCNT_GRP,  
  ACCOUNT,  
  AC_DOC_TYP, 
  _BIC_CA_OFERTA,
  MATERIAL,
  PROFIT_CTR,
  DEBIT_LC,
  CREDIT_LC,
  _BIC_CA_AWKEY,
  ITEM_NUM,
  GL_ACCOUNT
FROM `project.dataset.table.OFIN02`
WHERE MATERIAL = '' AND
DATE_TRUNC(PSTNG_DATE, MONTH) BETWEEN DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH)
                           AND LAST_DAY(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))


)
, JOIN_3 AS (
SELECT
  STG2.COMP_CODE,
  STG2.FISCPER,
  -- STG2.AC_DOC_NO,
  STG2.PSTNG_DATE,  
  STG2.ACCOUNT,  
  STG2.AC_DOC_TYP, 
  STG2._BIC_CA_OFERTA,
  STG2.PROFIT_CTR,
  STG2.DEBIT_LC,
  STG2.CREDIT_LC,
  CASE WHEN _BIC_CA_AWKEY2 IS NOT NULL THEN RIGHT(_BIC_CA_AWKEY2,10) ELSE RIGHT(STG2._BIC_CA_AWKEY,10) END AS CA_NUMREF,
  CASE WHEN _BIC_CA_AWKEY2 IS NOT NULL THEN LEFT(_BIC_CA_AWKEY2,10) ELSE LEFT(STG2._BIC_CA_AWKEY,10) END AS CA_GRPREC
FROM UOLB_UOLC_NPD_SEM_MATERIAL AS STG2
  LEFT OUTER JOIN UNION_1 AS STG1
    ON STG2.COMP_CODE = STG1.COMP_CODE AND 
    -- STG2.CHRT_ACCTS = STG1.CHRT_ACCTS AND 
    STG2.GL_ACCOUNT = STG1.GL_ACCOUNT AND 
    STG2.FISCVARNT = STG1.FISCVARNT AND 
    STG2.FISCPER = STG1.FISCPER AND 
    STG2.AC_DOC_NO = STG1.AC_DOC_NO AND 
    STG2.ITEM_NUM = STG1.ITEM_NUM
)

, VBREVE AS (
SELECT
  COMP_CODE,
  ACCOUNT,
  DOC_NUMBER, 
  S_ORD_ITEM, 
  CALDAY,
  AMOUNT,
  PROFIT_CTR,
  _BIC_CA_NUMREF,
  _BIC_CA_GRPREC
FROM `project.dataset._BIC_AOREC0100`

)

, JOIN_1 AS (
SELECT
  STG4.DOC_NUMBER, 
  STG4.S_ORD_ITEM, 
  STG4.AMOUNT, 
  STG4.PROFIT_CTR AS PROFIT_CTR_1,
  STG3.COMP_CODE,
  STG3.FISCPER,
  -- STG3.AC_DOC_NO,
  STG3.PSTNG_DATE,   
  STG3.ACCOUNT,  
  STG3.AC_DOC_TYP,
  STG3._BIC_CA_OFERTA,
  STG3.PROFIT_CTR,
  STG3.DEBIT_LC,
  STG3.CREDIT_LC
FROM JOIN_3 STG3
LEFT OUTER JOIN VBREVE STG4
ON STG4.COMP_CODE = STG3.COMP_CODE 
AND STG4.CALDAY = STG3.PSTNG_DATE 
AND STG4.ACCOUNT = STG3.ACCOUNT
AND STG4._BIC_CA_NUMREF = STG3.CA_NUMREF
AND STG4._BIC_CA_GRPREC = STG3.CA_GRPREC
)

, PROJECTION_1 AS (
SELECT 
  COMP_CODE,
  FISCPER,
  -- AC_DOC_NO,
  PSTNG_DATE,
  ACCOUNT,
  AC_DOC_TYP,
  _BIC_CA_OFERTA,
  PROFIT_CTR,
  DOC_NUMBER,
  S_ORD_ITEM,
  DEBIT_LC,
  CREDIT_LC,
  ((CASE WHEN AMOUNT < 0.00 THEN AMOUNT ELSE 0 END) * -1) AS DEBIT_LC_1,
  (CASE WHEN AMOUNT > 0.00 THEN AMOUNT ELSE 0 END) AS CREDIT_LC_1
FROM JOIN_1
WHERE DOC_NUMBER IS NOT NULL AND 
  PROFIT_CTR_1 = PROFIT_CTR
)

, PROJECTION_2 AS (
SELECT 
  COMP_CODE,
  FISCPER,
  -- AC_DOC_NO,
  PSTNG_DATE,
  ACCOUNT,
  AC_DOC_TYP,
  _BIC_CA_OFERTA,
  PROFIT_CTR,
  DEBIT_LC,
  CREDIT_LC,
FROM JOIN_1
WHERE DOC_NUMBER IS NULL
)

, JOIN_2 AS ( 
SELECT 
  STG4.COMP_CODE,
  STG4.FISCPER,
  -- STG4.AC_DOC_NO,
  STG4.PSTNG_DATE,   
  STG4.ACCOUNT,  
  STG4.AC_DOC_TYP,
  STG4.PROFIT_CTR,
  STG4.DEBIT_LC_1,
  STG4.CREDIT_LC_1,  
  AOSDF._BIC_CA_OFERTA AS _BIC_CA_OFERTA,
  AOSDF.MATERIAL AS MATERIAL
FROM PROJECTION_1 STG4 
LEFT OUTER JOIN `project.dataset._BIC_AOSDF0200` AOSDF
ON STG4.DOC_NUMBER = AOSDF._BIC_CA_IDTC1
AND STG4.COMP_CODE = AOSDF.COMP_CODE
AND STG4.S_ORD_ITEM = AOSDF.BILL_ITEM
)

, UOLB_UOLC AS (
SELECT
  FIN01.COMP_CODE, 
  FIN01.FISCPER, 
  FIN01.PSTNG_DATE,  
  FIN01.ACCOUNT, 
  FIN01.AC_DOC_TYP, 
  FIN01.DEBIT_LC, 
  FIN01.CREDIT_LC, 
  -- FIN01.AC_DOC_NO,
  FIN01._BIC_CA_OFERTA, 
  FIN01.MATERIAL, 
  FIN01.PROFIT_CTR, 
FROM `project.dataset.table.OFIN01` FIN01
WHERE DATE_TRUNC(PSTNG_DATE, MONTH) BETWEEN DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH)
                           AND LAST_DAY(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))
)

, DIVB_OUTROS AS (
SELECT
  FIN03.COMP_CODE,   
  FIN03.FISCPER, 
  -- AC_DOC_NO,
  PSTNG_DATE,
  AC_DOC_TYP,
  MATERIAL,
  PROFIT_CTR,
  _BIC_CA_OFERTA,
  CREDIT_LC,
  DEBIT_LC,
  ACCOUNT,
FROM `project.dataset.table.OFIN03` FIN03
WHERE DATE_TRUNC(PSTNG_DATE, MONTH) BETWEEN DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH)
                           AND LAST_DAY(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))
)
, UOLB_UOLC_NPDD AS(
SELECT
  COMP_CODE,
  FISCPER,
  PSTNG_DATE,  
  ACCOUNT,  
  AC_DOC_TYP,
  DEBIT_LC,
  CREDIT_LC,
  -- AC_DOC_NO,
  _BIC_CA_OFERTA,
  PROFIT_CTR,
  MATERIAL,
FROM `project.dataset.table.OFIN02`
WHERE MATERIAL != '' AND 
DATE_TRUNC(PSTNG_DATE, MONTH) BETWEEN DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH)
                           AND LAST_DAY(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))

)
, REC AS (
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE, 
  ACCOUNT, 
  AC_DOC_TYP, 
  -- AC_DOC_NO,
  _BIC_CA_OFERTA, 
  MATERIAL, 
  PROFIT_CTR, 
  DEBIT_LC, 
  CREDIT_LC, 
  NULL AS DEBIT_LC_1, 
  NULL AS CREDIT_LC_1 
FROM UOLB_UOLC
UNION ALL 
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE, 
  ACCOUNT, 
  AC_DOC_TYP, 
  -- AC_DOC_NO,
  _BIC_CA_OFERTA, 
  MATERIAL, 
  PROFIT_CTR, 
  DEBIT_LC, 
  CREDIT_LC, 
  NULL AS DEBIT_LC_1, 
  NULL AS CREDIT_LC_1, 
FROM UOLB_UOLC_NPDD
UNION ALL 
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE, 
  ACCOUNT, 
  AC_DOC_TYP, 
  -- AC_DOC_NO,
  _BIC_CA_OFERTA, 
  MATERIAL, 
  PROFIT_CTR, 
  NULL AS DEBIT_LC, 
  NULL AS CREDIT_LC, 
  DEBIT_LC_1, 
  CREDIT_LC_1
FROM JOIN_2    
UNION ALL 
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE, 
  ACCOUNT, 
  AC_DOC_TYP, 
  -- AC_DOC_NO, 
  _BIC_CA_OFERTA, 
  MATERIAL, 
  PROFIT_CTR, 
  DEBIT_LC, 
  CREDIT_LC, 
  NULL AS DEBIT_LC_1, 
  NULL AS CREDIT_LC_1,
FROM DIVB_OUTROS
UNION ALL 
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE,
  ACCOUNT, 
  AC_DOC_TYP, 
  -- AC_DOC_NO,
  _BIC_CA_OFERTA, 
  NULL AS MATERIAL, 
  PROFIT_CTR, 
  DEBIT_LC, 
  CREDIT_LC, 
  NULL AS DEBIT_LC_1, 
  NULL AS CREDIT_LC_1
FROM PROJECTION_2
)

, STAR_JOIN AS (
SELECT 
  COMP_CODE, 
  FISCPER, 
  PSTNG_DATE, 
  ACCOUNT,   
  -- AC_DOC_NO AS NUM_DOC_CONTABIL,
  _BIC_CA_OFERTA, 
  REC.MATERIAL, 
  PROFIT_CTR, 
  CASE WHEN AC_DOC_TYP = 'RV' THEN IFNULL(CREDIT_LC,0)+ IFNULL(CREDIT_LC_1,0) ELSE 0 END - 
  CASE WHEN AC_DOC_TYP = 'RV' THEN  IFNULL(DEBIT_LC,0)+ IFNULL(DEBIT_LC_1,0) ELSE 0 END + 
  CASE WHEN AC_DOC_TYP != 'RV' THEN  IFNULL(DEBIT_LC,0)+ IFNULL(DEBIT_LC_1,0) ELSE  0 END - 
  CASE WHEN AC_DOC_TYP != 'RV' THEN  IFNULL(CREDIT_LC,0)+ IFNULL(CREDIT_LC_1,0) ELSE 0 END AS TOTAL_SALDO
FROM REC
)


SELECT
  COMP_CODE,
  FISCPER, 
  PSTNG_DATE,
  REC._BIC_CA_OFERTA AS OFERTA,
  REC.ACCOUNT,
  REC.MATERIAL,
  REC.PROFIT_CTR,
  CL.txtmd AS DESCRICAO_CENTRO_LUCRO,
  OP._BIC_CA_UNNEG AS UNIDADE_DE_NEGOCIO,
  OP._BIC_CA_PROPDD AS DESCRICAO_MATERIAL,
  CONT.ACCOUNT_DESCRICAO as DESCRICAO_ACCOUNT,
  off.txtlg as DESCRICAO_OFERTA,
  SUM(TOTAL_SALDO * -1) AS SALDO
FROM STAR_JOIN AS REC
LEFT JOIN `project.dataset.table._BIC_AOPRO0100` AS OP
ON REC.MATERIAL = OP.MATERIAL
LEFT JOIN `ecc_financeiro_gl_report.CV_DM_ACCOUNT` AS CONT
ON REC.ACCOUNT = CONT.ACCOUNT_ACC
LEFT JOIN `project.dataset.table._BIC_TCA_OFERTA` AS OFF
ON REC._BIC_CA_OFERTA = OFF._BIC_CA_OFERTA
LEFT JOIN `project.dataset.table._BI0_TPROFIT_CTR` AS CL
ON REC.PROFIT_CTR = CL.PROFIT_CTR AND CL.DATETO ='9999-12-31'
WHERE COMP_CODE = 'UOLB'
AND REC.ACCOUNT >= '0040000000' AND REC.ACCOUNT <= '0049999999'
GROUP BY COMP_CODE,
  FISCPER, 
  PSTNG_DATE,
  REC._BIC_CA_OFERTA,
  REC.ACCOUNT,
  REC.MATERIAL,
  REC.PROFIT_CTR,
  CL.txtmd,
  OP._BIC_CA_UNNEG,
  OP._BIC_CA_PROPDD,
  CONT.ACCOUNT_DESCRICAO,
  OFF.txtlg